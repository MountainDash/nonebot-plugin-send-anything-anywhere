[tool.poetry]
name = "nonebot-plugin-send-anything-anywhere"
version = "0.7.0"
description = "An adaptor for nonebot2 adaptors"
authors = ["felinae98 <731499577@qq.com>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "nonebot_plugin_saa" }]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: POSIX :: Linux",
  "Operating System :: MacOS",
  "License :: OSI Approved :: MIT License",
]

[tool.poetry.dependencies]
python = ">=3.9, <4.0"
nonebot2 = "^2.3.0"
strenum = "^0.4.8"
pydantic = ">=1.10.0,<3.0.0,!=2.5.0,!=2.5.1"
anyio = ">=3.3.0,<5.0.0"
filetype = "^1.2.0"

[tool.poetry.group.dev.dependencies]
pytest-asyncio = "^0.20.2"
ipdb = "^0.13.9"
pip = "^23.0"
pytest-cov = "^5.0.0"
nonebug = "^0.3.1"
nonebot2 = { extras = [
  "fastapi",
  "httpx",
  "websockets",
], version = "^2.0.0rc4" }
ruff = ">=0.4.0"
pytest-mock = "^3.10.0"
respx = "^0.20.2"

[tool.poetry.group.adapters]
optional = true

[tool.poetry.group.adapters.dependencies]
nonebot-adapter-onebot = "^2.4.0"
nonebot-adapter-kaiheila = "^0.3.1"
nonebot-adapter-telegram = { git = "https://github.com/nonebot/adapter-telegram.git" }
nonebot-adapter-feishu = "^2.4.0"
nonebot-adapter-red = "^0.9.0"
nonebot-adapter-dodo = "^0.2.0"
nonebot-adapter-qq = "^1.4.1"
nonebot-adapter-satori = "^0.12.3"
nonebot-adapter-discord = "^0.1.7"

[tool.black]
line-length = 88
target-version = ["py39", "py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
'''

[tool.isort]
profile = "black"
line_length = 88
length_sort = true
skip_gitignore = true
force_sort_within_sections = true
src_paths = ["nonebot_plugin_saa", "tests"]
extra_standard_library = ["typing_extensions"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
asyncio_mode = "auto"

[tool.pyright]
pythonVersion = "3.9"
pythonPlatform = "All"
defineConstant = { PYDANTIC_V2 = true }
typeCheckingMode = "basic"
reportShadowedImports = false
disableBytesTypePromotions = true

[tool.ruff]
line-length = 88
target-version = "py39"

[tool.ruff.lint]
select = [
  "F",     # Pyflakes
  "W",     # pycodestyle warnings
  "E",     # pycodestyle errors
  "UP",    # pyupgrade
  "ASYNC", # flake8-async
  "C4",    # flake8-comprehensions
  "T10",   # flake8-debugger
  "T20",   # flake8-print
  "PYI",   # flake8-pyi
  "PT",    # flake8-pytest-style
  "Q",     # flake8-quotes
  "RUF",   # Ruff-specific rules
]
ignore = [
  "E402",   # module-import-not-at-top-of-file
  "UP037",  # quoted-annotation
  "RUF001", # ambiguous-unicode-character-string
  "RUF002", # ambiguous-unicode-character-docstring
  "RUF003", # ambiguous-unicode-character-comment
]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.coverage.report]
exclude_also = [
  "raise NotImplementedError",
  "if TYPE_CHECKING:",
  "except ImportError:",
  "except Exception as e:",
]

[tool.nonebot]
adapters = [
  { name = "OneBot V11", module_name = "nonebot.adapters.onebot.v11" },
  {name = "Satori", module_name = "nonebot.adapters.satori"},
]
plugins = ["nonebot_plugin_saa"]
plugin_dirs = ["extra_plugins"]
builtin_plugins = ["echo"]
